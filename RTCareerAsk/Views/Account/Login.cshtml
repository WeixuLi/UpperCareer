@model RTCareerAsk.Models.LoginRegiModel

@{
    ViewBag.Title = "登录Upper";
    bool isFromRegister = ViewBag.FromRegister != null ? Convert.ToBoolean(ViewBag.FromRegister) : false;
}

<ul class="nav nav-tabs" style="max-width: 600px; margin: 0 auto;">
    @if (ViewBag.FromRegister != null && Convert.ToBoolean(ViewBag.FromRegister))
    {
        <li id="tabLogin" class=""><a href="#divLoginForm" data-toggle="tab" aria-expanded="true">登录</a></li>
        <li id="tabRegi" class="active"><a href="#divRegister" data-toggle="tab" aria-expanded="false">注册</a></li>
    }
    else
    {
        <li id="tabLogin" class="active"><a href="#divLoginForm" data-toggle="tab" aria-expanded="true">登录</a></li>
        <li id="tabRegi" class=""><a href="#divRegister" data-toggle="tab" aria-expanded="false">注册</a></li>
    }
</ul>

<div id="tabLoginAndReg" class="tab-content" style="margin: 0 auto; max-width: 600px;">
    <div id="divLoginForm" class="tab-pane fade @Html.AssignClassWithCondition(!isFromRegister, "active in")">
        @Html.Partial("_Login", Model.Login)
    </div>
    <div id="divRegister" class="tab-pane fade @Html.AssignClassWithCondition(isFromRegister, "active in")">
        @Html.Partial("_Register", Model.Register)
    </div>
</div>
@*<section class="social" id="socialLoginForm">
    <h2>Use another service to log in.</h2>
    @Html.Action("ExternalLoginsList", new { ReturnUrl = ViewBag.ReturnUrl })
</section>*@

@section Scripts {
    @Scripts.Render("~/bundles/login")
}
