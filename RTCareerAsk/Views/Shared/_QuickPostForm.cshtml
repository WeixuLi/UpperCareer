@model RTCareerAsk.Models.QuestionPostModel

@{
    bool IsAuthorized = ViewBag.IsAuthorized != null ? Convert.ToBoolean(ViewBag.IsAuthorized) : false;
}

@using (Ajax.BeginForm("PostQuestion", "Question", null, new AjaxOptions
{
    UpdateTargetId = "divQuestionList",
    OnBegin = "OnQuickPostBegin",
    OnSuccess = "OnQuickPostSuccess",
    OnComplete = "OnQuickPostComplete",
    OnFailure = "OnQuickPostFailure"
}, new { id = "formQuickPost" }))
{
    <div class="form-group has-success">
        <div class="input-group">
            @Html.TextBoxFor(model => model.PostTitle, new { placeholder = "今天你在职场中遇到了什么问题？", @class = "form-control " + Html.AssignClassWithCondition(!IsAuthorized, "redirect-login") })
            <span class="input-group-btn">
                <input type="submit" class="btn btn-success @Html.AssignClassWithCondition(!IsAuthorized, "redirect-login")" value="提问" />
            </span>
        </div>
        @Html.ValidationMessageFor(model => model.PostTitle, "", new { @class = "validation-msg" })
    </div>
}
<script type="text/javascript">
    $.validator.unobtrusive.parse("#formQuickPost");
</script>
